#!/bin/bash
#
#   abs
#




    # global(s)
    script_name=$(basename $0)
    script_verbose=


    # | feature(s)

        function abs {
        #
        #   $1  =   'action'
        #   $2  =   'repository'    (optional)
        #   $3  =   'branch'        (optional)
        #

            # var
            action="$1"
            repository="$2"
            branch="$3"

            # log - init
            log "Initiating '$action'"

            # check - optional
            [ -z "$branch"      ] && branch='master'
            [ -z "$directory"   ] && directory='.'

            # check - dir
            [ ! -d "$directory" ] && error "Bad directory '$directory'" && exit 2

            # relative -> absolute
            directory=$( realpath "$directory" )

            # log - directory
            log "Found directory '$directory'"

            # log - directory - search
            log "Searching directory..."
            log "Found '`find "$directory" -name *'.git' | wc -l`' GIT repositories"

            # find git(s)
            for git in `find "$directory" -name '.git'`; do

                # directory
                cd "$git/.."

                # find remote(s)
                for remote in `git remote`; do

                    # push
                    if [ $script_verbose ]; then
                        git "${action,,}" "$remote" "$branch"
                    else
                        git "${action,,}" "$remote" "$branch" &> /dev/null
                    fi

                    # log - result
                    if [ $? -eq 0 ]; then
                        log   "$action '$git' '$remote:$branch'"
                    else
                        error "ERROR '$git' '$remote:$branch'"
                    fi

                done

            done

            # return
            return 0

        }

        function pull {

            # args
            while getopts ":b:d:v" FLAG; do
                case "$FLAG" in
                    b)  branch="$OPTARG"
                        ;;
                    d)  directory="$OPTARG"
                        ;;
                    v)  script_verbose=1
                        ;;
                esac
            done

            # abs
            abs "PULL" "$directory" "$branch"

            # return
            return 0

        }

        function push {

            # args
            while getopts ":b:d:v" FLAG; do
                case "$FLAG" in
                    b)  branch="$OPTARG"
                        ;;
                    d)  directory="$OPTARG"
                        ;;
                    v)  script_verbose=1
                        ;;
                esac
            done

            # abs
            abs "PUSH" "$directory" "$branch"

            # return
            return 0

        }

    # feature(s) |


    # | function(s)

        function error {
            logger -s -p user.error -t "$script_name" "$@"
        }

        function log {
            logger -s -p user.notice -t "$script_name" "$@"
        }

        function usage {
            echo "$0 usage: $0 [push]"
        }

    # function(s) |


    # | main

        # check - arg(s)
        [ $# -lt 1 ] && usage && exit 2

        # case - arg - 1
        case "$1" in
            pull)       shift
                        pull "$@"
                        ;;
            push)       shift
                        push "$@"
                        ;;
            *)          usage
                        ;;
        esac

    # main |




#
#   <(0.o)>--
#
