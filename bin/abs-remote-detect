#!/usr/bin/python3
#
#
#   A CLI tool to set git remote(s).
#
#




# import(s)
from os.path import expanduser
import argparse
import os
import requests
import sys


# argument(s)
PARSER = argparse.ArgumentParser()
PARSER.add_argument("--directory", help="specify a working directory", action="store")
PARSER.add_argument("--dry-run", help="show command but do not run remote add", action="store_true")
PARSER.add_argument('--name', help="input a remote name", action="store", required=True)
PARSER.add_argument("--prefix", help="specify a remote prefix", action="store")
PARSER.add_argument("--seperator", help="specify a seperator", action="store")
PARSER.add_argument("--suffix", help="specify a remote suffix", action="store")
PARSER.add_argument("--verbose", help="show more detailed output", action="store_true")


# global(s)
DIRECTORY   = ""
DRY_RUN     = False
NAME        = ""
PREFIX      = ""
SEPERATOR   = "-"
SUFFIX      = ""
VERBOSE     = False




# detect
def detect():

    # global(s)
    global DIRECTORY
    global DRY_RUN
    global NAME
    global PREFIX
    global SEPERATOR
    global SUFFIX
    global VERBOSE

    if DIRECTORY == "":
        DIRECTORY = os.getcwd()

    # clean - directory
    DIRECTORY = DIRECTORY.replace('/git', '')

    # prepare - path
    path = DIRECTORY.replace('/', SEPERATOR)[1:]

    # prepare - command
    command = "git remote add " + NAME + " " + PREFIX + path + SUFFIX

    # ? - dry - run
    if DRY_RUN:
        print(command)
        sys.exit(0)

    # exec - command
    os.system(command)




# main
def main():

    # global(s)
    global DIRECTORY
    global DRY_RUN
    global NAME
    global PREFIX
    global SEPERATOR
    global SUFFIX
    global VERBOSE

    # get - argument(s)
    arguments = PARSER.parse_args()

    # ? - directory
    if arguments.directory:
        DIRECTORY = arguments.directory

    # ? - dry - run
    if arguments.dry_run:
        DRY_RUN = True

    # ? - name
    if arguments.name:
        NAME = arguments.name

    # ? - prefix
    if arguments.prefix:
        PREFIX = arguments.prefix

    # ? - suffix
    if arguments.seperator:
        SEPERATOR = arguments.seperator

    # ? - suffix
    if arguments.suffix:
        SUFFIX = arguments.suffix

    # ? - verbose
    if arguments.verbose:
        VERBOSE = True

    # detect
    detect()

main()




